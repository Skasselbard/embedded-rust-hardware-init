[package]
authors = ["Tom Meyer <tom.meyer@uni-rostock.de>"]
default-run = "main"
edition = "2018"
name = "embedded_rust"
version = "0.2.0"

[workspace]
members = ["embedded_rust_macros", "devices"]

[dependencies]
cortex-m = "0.6.2"
cortex-m-rt = "0.6.12"
embedded-hal = {version = "0.2.3"}
nom-uri = {git = "https://github.com/Skasselbard/nom-uri"}
stm32f1xx-hal = {version = "0.5.3", features = ["stm32f103", "rt", "medium"]}
# nom-uri = { path = "../nom-uri"}
cortex-m-semihosting = "0.3.5"
linked_list_allocator = {version = "0.8.4"}
log = "0.4.8"
# concurency safe data structures
crossbeam-queue = {version = "0.2.1", default-features = false, features = ["alloc"]}
# static initialization
conquer-once = {version = "0.2.0", default-features = false}
embedded_rust_devices = {path = "./devices"}
# TODO: could be a bin dependency https://github.com/rust-lang/cargo/issues/1982
embedded_rust_macros = {path = "./embedded_rust_macros"}

# [profile.dev]
# panic = "abort"

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
debug-assertions = true 
lto = true # better optimizations
opt-level = "z" # optimized for size
# panic = "abort"

[profile.dev]
opt-level = "z"

# https://rust-embedded.github.io/book/unsorted/speed-vs-size.html
[profile.dev.package."*"]
opt-level = "z" # optimized for size

[lib]
bench = false
path = "src/lib.rs"
test = false

[[bin]]
bench = false
name = "main"
path = "src/apps/main.rs"
test = false

[[bin]]
bench = false
name = "proc"
path = "src/apps/proc_macro_test.rs"
test = false

[features]
default = ["stm32f1xx"]
stm32f1xx = []
